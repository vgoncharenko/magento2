apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels:
    app: web
spec:
  selector:
    matchLabels:
      app: web
  replicas: {{ .Values.web.replicaCount }}
  template:
    metadata:
      labels:
        app: web
    spec:
      initContainers:
      - name: prepare-code
        image: busybox
        command: ["sh", "-c", "mv {{ .Values.web.volume.mountPath }}/magento.zip /magento.zip && rm -rf {{ .Values.web.volume.mountPath }}/* && tar -xzf /magento.zip -C {{ .Values.web.volume.mountPath }} && rm /magento.zip && chown -R www-data:www-data {{ .Values.web.volume.mountPath }}"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: code
          mountPath: {{ .Values.web.volume.mountPath }}
          readOnly: false
      containers:
      - name: magento2-web
        image: {{ .Values.web.image.repository }}/{{ .Values.web.image.name }}:{{ .Values.web.image.tag }}
        securityContext:
          capabilities:
            add:
            - IPC_LOCK
            - SYS_RESOURCE
            - SYS_ADMIN
            - NET_BIND_SERVICE
        resources:
          limits:
            memory: {{ .Values.web.resources.limits.memory }}
            cpu: {{ .Values.web.resources.limits.cpu }}
        ports:
        - containerPort: 8087
        volumeMounts:
        - name: code
          mountPath: {{ .Values.web.volume.mountPath }}
          readOnly: false
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/magento.conf
          subPath: magento.conf
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: code
        persistentVolumeClaim:
          claimName: code
      - name: code-changes-apply
        configMap:
          name: code-changes-apply
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php
  labels:
    app: php
spec:
  selector:
    matchLabels:
      app: php
  replicas: {{ .Values.php.replicaCount }}
  template:
    metadata:
      labels:
        app: php
    spec:
      securityContext:
        fsGroup: 33
      containers:
      - name: magento2-php
        image: {{ .Values.php.image.repository }}/{{ .Values.php.image.name }}:{{ .Values.php.image.tag }}
        securityContext:
          privileged: true
          runAsUser: 33
          capabilities:
            add:
            - IPC_LOCK
            - SYS_RESOURCE
        resources:
          limits:
            memory: {{ .Values.php.resources.limits.memory }}
            cpu: {{ .Values.php.resources.limits.cpu }}
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: port
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: database
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: password
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: code
          mountPath: {{ .Values.web.volume.mountPath }}
          readOnly: false
        - name: install-magento
          mountPath: /etc/scripts/install_magento.sh
          subPath: install_magento.sh
      volumes:
      - name: code
        persistentVolumeClaim:
          claimName: code
      - name: install-magento
        configMap:
          name: install-magento
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: esnode
spec:
  selector:
    matchLabels:
      app: es-cluster
  replicas: {{ .Values.elasticsearch.replicaCount }}
  template:
    metadata:
      labels:
        app: es-cluster
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: fix-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: es-data
          mountPath: /usr/share/elasticsearch/data
      - name: increase-vm-max-map
        image: busybox
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
      - name: increase-fd-ulimit
        image: busybox
        command: ["sh", "-c", "ulimit -n 65536"]
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        image: {{ .Values.elasticsearch.image.repository }}/{{ .Values.elasticsearch.image.name }}:{{ .Values.elasticsearch.image.tag }}
        securityContext:
          privileged: true
          runAsUser: 1000
          capabilities:
            add:
            - IPC_LOCK
            - SYS_RESOURCE
        env:
        - name: ES_JAVA_OPTS
          value: {{ .Values.elasticsearch.env.ES_JAVA_OPTS }}
        resources:
          requests:
            memory: {{ .Values.elasticsearch.resources.limits.memory }}
            cpu: {{ .Values.elasticsearch.resources.limits.cpu }}
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /_cluster/health?local=true
            port: 9200
          initialDelaySeconds: 5
        ports:
        - containerPort: 9200
          name: es-http
        - containerPort: 9300
          name: es-transport
        volumeMounts:
        - name: es-data
          mountPath: /usr/share/elasticsearch/data
        - name: elasticsearch-config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
      volumes:
      - name: elasticsearch-config
        configMap:
          name: es-config
      - name: es-data
        persistentVolumeClaim:
          claimName: es-data
