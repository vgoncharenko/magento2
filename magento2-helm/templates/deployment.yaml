apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels:
    app: web
spec:
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
        role: node1
        tier: web
    spec:
      initContainers:
      - name: prepare-code
        image: busybox
        command: ["sh", "-c", "rm -rf /magento2ce/* && tar -xzf /magento.zip -C /magento2ce && rm /magento.zip"]
        securityContext:
          privileged: true
        volumeMounts:
         - name: code
          mountPath: /magento2ce
          readOnly: false
        - name: code-changes-apply
          mountPath: /etc/scripts/apply_changes.sh
          subPath: apply_changes.sh
      initContainers:
      - name: fix-permissions
        image: busybox
        command: ["sh", "-c", "chown -R www-data:www-data /var/cache/nginx && chmod -R 777 /var/cache/nginx && rm /etc/nginx/conf.d/default.conf && sed -i 's/nginx;/www-data;/g' /etc/nginx/nginx.conf"]
        securityContext:
          privileged: true
        volumeMounts:
         - name: code
          mountPath: /magento2ce
          readOnly: false
      containers:
      - name: magento2-web
        image: gonchare.azurecr.io/nginx:latest
        securityContext:
          capabilities:
            add:
            - IPC_LOCK
            - SYS_RESOURCE
            - SYS_ADMIN
            - NET_BIND_SERVICE
        resources:
          limits:
            memory: "256Mi"
            cpu: "10m"
        ports:
        - containerPort: 8087
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mariadb-host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mariadb-port
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mariadb-database
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mariadb-username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mariadb-password
        volumeMounts:
        - name: code
          mountPath: /magento2ce
          readOnly: false
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/magento.conf
          subPath: magento.conf
        - name: install-magento
          mountPath: /etc/scripts/install_magento.sh
          subPath: install_magento.sh
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: code
        persistentVolumeClaim:
          claimName: code
      - name: code-changes-apply
        configMap:
          name: code-changes-apply
      - name: install-magento
        configMap:
          name: install-magento
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php
  labels:
    app: php
spec:
  selector:
    matchLabels:
      app: php
  replicas: 1
  template:
    metadata:
      labels:
        app: php
        role: node1
        tier: php
    spec:
      securityContext:
        fsGroup: 33
      containers:
      - name: magento2-php
        image: gonchare.azurecr.io/php:7.2
        securityContext:
          privileged: true
          runAsUser: 33
          capabilities:
            add:
            - IPC_LOCK
            - SYS_RESOURCE
        resources:
          limits:
            memory: "128Mi"
            cpu: "10m"
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: code
          mountPath: /magento2ce
          readOnly: false
      volumes:
      - name: code
        persistentVolumeClaim:
          claimName: code
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: esnode
spec:
  selector:
    matchLabels:
      app: es-cluster
  replicas: 1
  template:
    metadata:
      labels:
        app: es-cluster
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: fix-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: es-data
          mountPath: /usr/share/elasticsearch/data
      - name: increase-vm-max-map
        image: busybox
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
      - name: increase-fd-ulimit
        image: busybox
        command: ["sh", "-c", "ulimit -n 65536"]
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        resources:
          requests:
            memory: "128Mi"
        securityContext:
          privileged: true
          runAsUser: 1000
          capabilities:
            add:
            - IPC_LOCK
            - SYS_RESOURCE
        image: docker.elastic.co/elasticsearch/elasticsearch:6.5.0
        env:
        - name: ES_JAVA_OPTS
          value: "-Xms128m -Xmx128m"
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /_cluster/health?local=true
            port: 9200
          initialDelaySeconds: 5
        ports:
        - containerPort: 9200
          name: es-http
        - containerPort: 9300
          name: es-transport
        volumeMounts:
        - name: es-data
          mountPath: /usr/share/elasticsearch/data
        - name: elasticsearch-config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
      volumes:
      - name: elasticsearch-config
        configMap:
          name: es-config
      - name: es-data
        persistentVolumeClaim:
          claimName: es-data
---
apiVersion: servicecatalog.k8s.io/v1beta1
kind: ServiceInstance
metadata:
  name: magento2ee
spec:
  clusterServiceClassExternalName: azure-mysql-5-6
  clusterServicePlanExternalName: basic
  parameters:
    location: centralus
    resourceGroup: trial
    firewallRules:
    - startIPAddress: "0.0.0.0"
      endIPAddress: "255.255.255.255"
      name: "AllowAll"
    cores: 1
    storage: 50
    backupRetention: 7
---
apiVersion: servicecatalog.k8s.io/v1beta1
kind: ServiceInstance
metadata:
  name: rediscache-instance
spec:
  clusterServiceClassExternalName: azure-rediscache
  clusterServicePlanExternalName: basic
  parameters:
    location: centralus
    resourceGroup: trial

